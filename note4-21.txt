页面重构
（html & css）
html: 超文本标记语言
css：层叠样式表

html：根元素
标签 & 属性

语法：
1、单标签
	<标签名>   只有开始标签称为单标签
2、双标签
	<标签名></标签名>   有开始也有结束标签称为双标签

属性的语法：

   属性名 = "属性值"
   属性名 = "属性值1 属性值2"  （一个属性名有多个属性值）
注意：
1、标签名和属性名之间要有空格
2、多个属性之间要有空格
3、多个属性值之间要有空格

路径：
绝对路径： 从盘符开始的一条完整路径
相对路径： 两个文件的位置关系


css
1、选择器： 一个能够选择html文档中一个或者多个标签的一个工具（或者规则）

	注意语法中类名前面有个.

普通选择器：

（1） 标签选择器：选择页面中所有的****标签
	语法：标签名 {
		样式名：样式值；
		......
		}
（2）类名选择器： 选择类名为****的标签  
	语法：.类名 {
		样式名：样式值；
		......
		}
（3）交叉选择器： 选择****标签下的****类名的标签
例：
div.box{
	样式名：样式值
	......
	}    类名为box的div中的样式

（4）群组选择器：选择页面中所有的E1,E2,E3元素
	E1,E2,E3{
		样式名：样式值；
	}

（5）通用选择器：选择所有元素
	*{
		样式名：样式值
}

（6）后代选择器：选择E1 的后代E2
	E1 E2{
		样式名：样式值
}

（7）ID选择器：选择页面中ID为***的唯一标签   ID不可重复
	#ID名{
		样式名：样式值
}

（8）相邻兄弟选择器
	E1+E2{}   选择E1的下一个兄弟元素E2（不能选中上一个兄弟元素）

（9）子类选择器
	E1>E2{}      选择E1的子类元素

（10）属性选择器：
	[attr]{}   选择所有拥有attr属性的元素
	[attr="value"]{}   选择所有拥有attr属性且属性值=value的元素
	E[attr="value"]{}   选择所有拥有attr属性且属性值=value的E标签元素
	E[attr`="value"]{}   选择拥有attr属性且属性值（一个或多个）其中一个=value的E标签元素  `是波浪线（键）
	E[attr^="v"]{}   选择拥有attr属性且属性值（一个或多个）其中一个以v开头的E标签元素  ^是上箭头
	E[attr$="e"]{}   选择拥有attr属性且属性值（一个或多个）其中一个以e结尾的E标签元素  $
	E[attr*="e"]{}   选择拥有attr属性且属性值（一个或多个）其中一个中包含e的E标签元素

特殊选择器：

（1）伪类选择器：
	:hover{}   选择**元素鼠标移入状态
	
	伪元素选择器：
		::after{}      在元素内容之前插入元素
		::before{}      在元素内容之后插入元素
		*****伪元素选择器里 content:""; 必须有*****

（2）伪结构选择器：   括号中可填num数字、even偶数、odd奇数、表达式：（3n）3的倍数   （2n）2的倍数
	E:first-child{}   选择作为第一个孩子的E标签
	E:last-child{}   选择作为最后一个孩子的E标签
	E:nth-child(n){}   选择作为第n个孩子的E标签
	E:nth-last-child(n){}   选择作为倒数第n个孩子的E标签
	
	E:first-of-type{}   选择作为子元素同类型中的第一个元素
	E:last-of-type{}   选择作为子元素同类型中的最后一个元素
	E:nth-of-type(n){}   选择作为子元素同类型中的第n个元素
	E:nth-last-of-type(n){}   选择作为子元素同类型中的倒数第n个元素
	

选择器的优先级：
宗旨（越具体优先级越高）
ID选择器：优先级100
类名选择器：优先级10
标签选择器：优先级1


优先级：a b c d e

	a 行内样式
	b ID选择器
	c 类名选择器  伪类选择器（:hover） 属性选择器
	d 标签选择器 伪元素选择器（::after）
	e 通用选择器

2、样式： 
	border：1px solid red;
边框的粗细程度   边框的样式   边框的颜色
width
hight
background-color：blue；
边框  border：边框粗细（1px） 边框样式（solid（实线）） 颜色（red）



css样式表的引入方式
1，外链式
<link href="" rel="stylesheet">
2，嵌入式
<style></style>
3,行内样式
<div style="width=200px height=200px"></div>


命名规范：
   1，严格区分大小写
   2，可以采用 字母 数字 下划线,数字不能开头
   3，命名尽量语义化
   4，驼峰命名法


margin：0 auto： 让块元素在父元素中水平居中
color:字体颜色
background-color:背景色
font-size:35px  字体大小
font-weight:normal;  字体规格
	normal  常规
	bold   加粗
	100-800   加粗程度
text-align:   ;
	文本的水平居中
	冒号之后有：
		left   居左
		right   居右
		center   居中
line-height:120px;
	有行高自动居中  120px 即行高


4-22:

h1 -- h6:  标题标签
	分级数  最高级是h1  最低级是h6

<hr>： 定义水平线 （不常用）
<br>： 换行
<pre>和<p>标签的区别：pre标签识别空格   p标签不识别
更多标签看word 文档

按照标签在页面中的呈现效果分类：
1、行内元素：
	在一行内显示，不可以设置宽高。
	举例：span del i em b strong a......（看选择器类型）
	使页面中的字拥有不同的样式
2、块元素：
	可以设置宽高，独占一行。
	举例：div h1--h6（标题标签） 列表标签 段落标签......
	
3、行内块元素：    （不常用   有间隔不方便处理）
	可以设置宽高，在一行内显示。
	举例：img 表单控件

元素的转换：
	块元素：  display:block;
	行内元素： display:inline;
	行内块元素： display:inline-block;

元素的级别：
	块元素>行内块元素>行内元素

元素的嵌套规范：
1、同一级别可以相互嵌套
2、级别高的元素可以嵌套级别低的元素
3、段落标签只能嵌套行内元素（文字）
4、a 标签不可以嵌套a 标签

盒子模型：  
1、margin   外间距（盒子与盒子之间的距离）
2、border   边框
3、padding   内填充（内间距） 是边框与内容之间的距离
4、conter   内容

margin：
	margin-top/margin-right/margin-bottom/margin-left   （上右下左）
	margin：50px   上右下左都为50px  
	margin：50px 100px；   上下为50px  左右为100px
	margin：0 auto；  让块元素在父元素中水平居中  上下为0  左右为auto（自动）
	margin：50px 100px 150px;   上50  左右100  下150
	margin：50px 100px 150px 200px;   上50  右100  下150  左200

border：
	border：1px solid red;
	border-top/border-right/border-bottom/border-left   上右下左

padding：设置方法同margin

conter：；
	width：数值  百分比  auto
	height：数值  比分比  auto

一个元素的实际宽高：
	实际宽度=border-left + border-right + padding-left + padding-right；
	实际高度=border-top + border-bottom + padding-top + padding-bottom；



字体设置：font-family:"字体样式";
	字体样式可以被继承！！！

span的样式：cursor:pointer;
	鼠标样式：手型（a链接手型一样）


下划线：text-dectreion:underline;

阴影样式：
	box-shadow:0 10px 10px 0  #333;
		x轴的偏移量
		y轴的偏移量
		阴影的模糊程度
		阴影的大小
		阴影的颜色

css中颜色的表示方式：
1、预定义颜色：
	red/pink/blue/green...

2、#六位数的色值
	#000000 黑色

3、rgb（red,green,blue）
	rgb([0--255],[0--255],[0--255])

4、rgba（red,green,blue,透明度）  a就是代表透明度
	rgba([0--255],[0--255],[0--255],[0--1])	   0表示不透明  1表示透明

2D/3D：
平移样式：
	transform:translate(x,y);  x方向和y方向的平移
	transform:translateX(x);   x方向平移
	transform:translateY(y);   y方向平移

旋转样式：
	transform:rotate(1turn);旋转一圈   括号里写入度数，比如(180deg)  180度

缩放样式：
	transform:scale();   2放大2倍   0.5缩小为一半   可同时指定某个方向（2,0.5）是x方向放大2倍 y方向缩小为一半

斜切样式：
	transform:skew();   括号里填入度数   可同时指定某个方向

过渡样式：
	transition:all 0.5s;  全部过渡  时间延时0.5S


float 浮动：让块元素横排排列
	样式：float:left;   从左往右排列
		float:right;   从右往左排列

文档流：标准情况下，页面元素是从左往右从上到下依次排列的。

float 浮动的原理：使元素脱离文档流。让元素从文档层浮动到浮动层。

float 浮动引发的问题：
	浮动的子元素撑不开父元素
	
	解决方式：
		（1）给父元素添加overflow：hidden；（超出部分隐藏）
		（2）在父元素内容最后添加拥有清除浮动属性的元素
			clear：（right、left、both）；清除右边浮动元素、左边浮动元素、两边浮动元素对此元素的浮动影响

padding（内填充）
	width
	height

width：auto（默认值）|百分数|像素值
height：auto（默认值）|百分数|像素值

width：auto；参照父元素的width
height：auto；参照内容的height

盒子模型的问题：
1、大部分元素的margin padding 的值默认为0，但是有的一些元素的margin padding 不为0
	比如：body 、标题标签、列表标签、段落标签...

2、相邻的两个块元素的margin 值会重合。（值只会取最大值）

3、margin 的值可以设置为负数，padding 的值不可以

4、行内元素的margin 值只有左右，没有上下

5、两个发生嵌套关系的元素，如果父元素没有上边框、上padding 、父元素与子元素之间没有别的内容，此时子元素margin-top 会作用到父元素身上。

解决方法：
1、用父元素的padding-top 值代替子元素的marging-top值
2、给父元素添加overflow：hidden；

背景图：background-image：url（）；

背景图的尺寸：background-size：width height；
背景图的重复：background-repeat：no-repeat（不重复）;repeat-x（x方向重复）;repeat-y（y方向重复）;repeat（重复  默认的）;
背景图的定位：background-position:;
			x  y
			里面填数值、方位值（上右下左中：top right bottom left center[可省略]）
背景图开始渲染的位置：background-origin:;
			padding-box（默认值）   从padding开始渲染
			border-box      从边框的位置开始渲染
			content-box      从内容的位置开始渲染
背景图结束渲染的位置：background-clip:;
			padding-box   从padding结束渲染
			border-box（默认值）      从边框的位置结束渲染
			content-box      从内容的位置结束渲染
使背景图加载到浏览器中：background-attachment:fixed;


box-sizing:border-box;  将边框算在内容之中

*******继承的优先级是最低的*******

border-radius:50%;边框弧度  即正方形变圆形


定位：（重叠，层级越高的先看见）
	使定位的元素脱离文档层，到达定位层
	****定位的元素会多出五个样式：
		top right bottom left z-index(层级)

1、相对定位
	相对于自身来定位，在文档层中保留原来的位置。
	position:relative;

2、绝对定位
	相对于最近的、定位的祖先元素来定位，完全脱离文档流。
	position:absolute;

3、固定定位
	相对于浏览器的四条边来定位，完全脱离文档流。
	position:fixed;

定位中样式的优先级：（同时有top和bottom、同时有left和right）
	top的权重比bottom大
	left的权重比right大

定位元素的居中方式：（A、B两种表示方式）
A：
1、水平居中
	left:50%;
	margin-left:-定位元素的一半width;（注意负号）

2、垂直居中
	top:50%;
	margin-top:-定位元素的一半height;（注意负号）

3、绝对居中
	left:50%;
	margin-left:-定位元素的一半width;（注意负号）
	top:50%;
	margin-top:-定位元素的一半height;（注意负号）

B：
1、水平居中
	left:0;
	right:0;
	margin:0 auto;

2、垂直居中
	top:0;
	bottom:0;
	margin:auto 0;

3、绝对居中
	top:0;
	right:0;
	bottom:0;
	left:0;
	margin:auto;


opacity: ;    透明度  （0---1）   设置之后容器整个透明   不只是背景色透明


transition:proprety:all;   哪些进行过渡  选填background-color,width,height.....中间由，隔开
transition:duration:5s;     过渡的时间
transition-timing-function:cubic-bezier(1,0.07,0.54,2.01);    :ease;   时间函数
transition:delay:2s;    延迟2秒再过渡变换





5.26

perspective: ...px;   3d样式
perspective-origin：；  距离原点
transform-origin：；   绕着那个点进行变换

transform-style：preserve-3d；   保持3d变换



@keyframes   规定动画。

animation   所有动画属性的简写属性，除了 animation-play-state 属性。

animation-name   规定 @keyframes 动画的名称。

animation-duration   规定动画完成一个周期所花费的秒或毫秒。

animation-timing-function   规定动画的速度曲线。ease  linear匀速

animation-delay   规定动画何时开始。

animation-iteration-count   规定动画被播放的次数。 n  播放次数  Infinite  重复播放

animation-direction   规定动画是否在下一周期逆向地播放。 normal  不逆向  alternate 逆向 

animation-play-state   规定动画是否正在运行或暂停。paused  暂停  running 运行  

animation-fill-mode   规定动画完成之后的状态。none 不改变默认行为；默认为backwards  forwards  当动画完成后，保持当前状态。 backwards  当动画完成之后，恢复状态

规则样式：
	from{
	}
	to{
	}
或者：
	0%{
	}
	50%{
	}
	100%{
	}
